services:
  n8n:
    container_name: n8n-builder-n8n
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}

      # PostgreSQL DB config
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${POSTGRES_HOST}
      - DB_POSTGRESDB_PORT=${POSTGRES_PORT}
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - n8n-builder-n8n-data:/home/node/.n8n
      - ${DATA_FOLDER}/local_files:/files
    networks:
      - gen-ai-network

  postgres:
    container_name: n8n-builder-postgres
    image: postgres:14
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - n8n-builder-postgres-data:/var/lib/postgresql/data
    networks:
      - gen-ai-network

volumes:
  n8n-builder-n8n-data:
    name: n8n-builder-n8n-data
  n8n-builder-postgres-data:
    name: n8n-builder-postgres-data

networks: 
  gen-ai-network:
    external: true
