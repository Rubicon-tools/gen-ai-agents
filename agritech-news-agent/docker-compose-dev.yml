services:
  rag-scraper-app:
    container_name: agritech-news-agent-rag-scraper-app
    build:
      context: .
      dockerfile: Dockerfile.app
    env_file:
      - .env
    volumes:
      - .:/app
    command: tail -f /dev/null
    restart: unless-stopped
    networks:
      - gen-ai-network

  web-app:
    container_name: agritech-news-agent-web-app
    build:
      context: .
      dockerfile: Dockerfile.web
      args:
        ENV: ${ENV:-dev} 
    env_file:
      - .env
    working_dir: /app
    volumes:
      - ./web:/app
      - agritech-news-agent-web-app:/app/node_modules
    # command: sh -c "pnpm install && pnpm dev -p 3002"
    ports:
      - "3002:3002"
    restart: unless-stopped
    networks:
      - gen-ai-network

  postgres:
    container_name: agritech-news-agent-postgres
    image: postgres:14
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - agritech-news-agent-postgres-data:/var/lib/postgresql/data
    networks:
      - gen-ai-network
  
  qdrant:
    container_name: agritech-news-agent-qdrant
    image: qdrant/qdrant:latest
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "6333:6333"
    volumes:
      - agritech-news-agent-qdrant-data:/qdrant/storage
    networks:
      - gen-ai-network

  rag-api:
    container_name: agritech-news-agent-rag-api
    build:
      context: .
      dockerfile: Dockerfile.app
    env_file:
      - .env
    volumes:
      - .:/app
    command: python -m uvicorn app.rag.api:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - qdrant
    networks:
      - gen-ai-network

volumes:
  agritech-news-agent-postgres-data:
    name: agritech-news-agent-postgres-data
    driver: local
  agritech-news-agent-qdrant-data:
    name: agritech-news-agent-qdrant-data
    driver: local
  agritech-news-agent-web-app:
    name: agritech-news-agent-web-app
    driver: local

networks:
  gen-ai-network:
    external: true
